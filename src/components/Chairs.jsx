/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/coca_cola.glb 
Author: MemoRorschach (https://sketchfab.com/memororschach)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/coca-cola-bottle-34075fedb0ef40d9a172231134849914
Title: Coca Cola Bottle
*/

import React, { useContext, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import Context from "../context";

const Chairs = (props) => {
  const { nodes, materials, animations } = useGLTF("/models/chair.glb");
  const { tableItems, setTableItems } = useContext(Context);

  const chairsDirection = [
    { rotation: [-Math.PI / 100, 11, 0], position: [-1.2, -0.7, 0] },
    { rotation: [-Math.PI / 100, 1.5, 0], position: [1.2, -0.7, 0] },
    { rotation: [-Math.PI / 100, 0.1, 0], position: [0, -0.7, 2] },
    { rotation: [-Math.PI / 100, 3.2, 0], position: [0, -0.7, -2] },
  ];
  return (
    <>
      {chairsDirection.map((val, index) => {
        if (index < tableItems.person) {
          return (
            <group
              rotation={val.rotation}
              position={val.position}
              {...props}
              dispose={null}
            >
              <group scale={0.019}>
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Obod_sidenie__0.geometry}
                  material={materials["Scene_-_Root"]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Nogi__0.geometry}
                  material={materials["Scene_-_Root"]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Spinka__0.geometry}
                  material={materials["Scene_-_Root"]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Perekladina__0.geometry}
                  material={materials["Scene_-_Root"]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Fixator__0.geometry}
                  material={materials["Scene_-_Root"]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Obruch__0.geometry}
                  material={materials["Scene_-_Root"]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Perekladini__0.geometry}
                  material={materials["Scene_-_Root"]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Setka__0.geometry}
                  material={materials["Scene_-_Root"]}
                  position={[0, -0.2, 0]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Bolti__0.geometry}
                  material={materials["Scene_-_Root"]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
              </group>
            </group>
          );
        }
      })}
    </>
  );
};

useGLTF.preload("/chair.glb");

export default Chairs;
